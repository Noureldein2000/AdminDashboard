@model EditDenominationViewModel
@using AdminDashboard.Models.SwaggerModels
@using AdminDashboard.Helper
@{
    ViewData["Title"] = "Edit";
}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">

            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item active disabled">
                    <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">Denomination</a>
                </li>
                <li class="nav-item disabled">
                    <a class="nav-link" id="contact-tab" data-toggle="tab" href="#contact" role="tab" aria-controls="contact" aria-selected="false">Denomination Service Provider</a>
                </li>
                <li class="nav-item disabled">
                    <a class="nav-link" id="contact-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="contact" aria-selected="false">Denomination Parameter</a>
                </li>
                <li class="nav-item disabled">
                    <a class="nav-link" id="receiptData-tab" data-toggle="tab" href="#receiptData" role="tab" aria-controls="receiptData" aria-selected="false">Denomination Receipt</a>
                    @*<a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Denomination Receipt
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <a class="dropdown-item" id="receiptData-tab" data-toggle="tab" href="#receiptData" role="tab" aria-controls="receiptData" aria-selected="false">Receipt Data</a>
                            <a class="dropdown-item" id="receiptParam-tab" data-toggle="tab" href="#receiptParam" role="tab" aria-controls="receiptParam" aria-selected="false">Receipt Params</a>
                        </div>*@
                </li>
            </ul>

            <div class="tab-content mt-2" id="myTabContent">
                <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                    <form asp-action="Edit" method="post" id="frmDenomination">
                        @Html.AntiForgeryToken()
                        <div class="card">
                            <div asp-validation-summary="All" class="text-danger"></div>
                            <partial name="_Denomination" for="@Model.Denomination" />
                            <div class="card-footer mt-2">
                                <input type="submit" class="btn btn-success float-right" value="Save" />
                            </div>
                        </div>
                    </form>
                </div>
                <div class="tab-pane fade" id="contact" role="tabpanel" aria-labelledby="contact-tab">
                    <div class="card">
                        <div class="card-header">
                            <button type="button" class="float-right btn btn-primary" data-toggle="modal" data-target="#myDenominationServiceProviderModal" onclick="ClearData()">Add</button>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <table class="table table-striped" id="table-DenominationServiceProvider">
                                        <thead>
                                            <tr>
                                                <th>No.</th>
                                                <th>Provider Name</th>
                                                <th>Balance</th>
                                                <th>Code</th>
                                                <th>Amount</th>
                                                <th>Has Fees</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.DenominationServiceProvidersViewModels)
                                            {
                                                <tr id="tr-dsp-@item.Id">
                                                    <td>@item.Id</td>
                                                    <td>@item.ServiceProviderName</td>
                                                    <td>@item.Balance</td>
                                                    <td>@item.ProviderCode</td>
                                                    <td>@item.ProviderAmount</td>
                                                    <td>@item.ProviderHasFees</td>
                                                    <td>
                                                        <button onclick="EditDenominationServiceProvider(@item.Id,this)" class="btn btn-primary">Edit</button>
                                                        <button onclick="ChangeStatusDenominationServiceProvider(@item.Id,this)" class="btn @(item.Status ? "btn-danger" : "btn-success")">
                                                            @(item.Status ? "Deactive" : "Active")
                                                        </button>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="myDenominationServiceProviderModal" class="modal fade" role="dialog" dir="ltr">
                        <div class="modal-dialog modal-xl">
                            <!-- Modal content-->
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h3> Add Denomination Service Provider</h3>
                                </div>
                                <div class="modal-body">
                                    <form id="frmDenominationServiceProviders">
                                        <partial name="_DenominationServiceProviders.cshtml" model="new DenominationServiceProvidersViewModel()" />
                                        <hr />
                                        <div class="col-md-8">
                                            <label class="control-label d-block">URL</label>
                                            <select asp-items="@ViewBag.ServiceConfiguartion" class="form-control" id="ServiceConfigerationID">
                                                <option disabled selected> Choose URL Service</option>
                                            </select>
                                            <span class="text-danger"></span>
                                        </div>
                                        @*<partial name="_ServiceConfigurationPopUp.cshtml" model="new ServiceConfigerationViewModel()" />*@
                                    </form>
                                </div>
                                <div class="modal-footer">
                                    <input type="button" id="SaveDenominationServiceProvider" value="Save" class="btn btn-success float-right" onclick="AddDenominationServiceProvider($('#denominationServieProviderId').val())" />
                                    <button type="button" class="btn btn-secondary float-left" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                    <div class="card">
                        <div class="card-header">
                            <button type="button" class="float-right btn btn-primary" data-toggle="modal" data-target="#myDenominationParameter" onclick="ClearData()">Add</button>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <table class="table table-striped" id="table-DenomnationParamter">
                                        <thead>
                                            <tr>
                                                <th>No.</th>
                                                <th>Sequence</th>
                                                <th>Value</th>
                                                <th>Validation Expression</th>
                                                <th>Validation Message</th>
                                                <th>Validation Message Ar</th>
                                                <th>Optional</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.DenominationParameters)
                                            {
                                                <tr id="tr-dp-@item.Id">
                                                    <td>@item.Id</td>
                                                    <td>@item.Sequence</td>
                                                    <td>@item.Value</td>
                                                    <td>@item.ValidationExpression</td>
                                                    <td>@item.ValidationMessage</td>
                                                    <td>@item.ValidationMessageAr</td>
                                                    <td>@item.Optional</td>
                                                    <td>
                                                        <button onclick="viewDataDenomiationParamterModal(@item.Id,this)" class="btn btn-primary">Edit</button>
                                                        <button onclick="ConfirmDeleteDenominationParameter(@item.Id,@item.DenominationID,this)" class="btn btn-danger">Delete</button>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="myDenominationParameter" class="modal fade" role="dialog" dir="ltr" tabindex="-1">
                        <div class="modal-dialog modal-xl">
                            <!-- Modal content-->
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h3> Add Denomination Paramter</h3>
                                </div>
                                <div class="modal-body">
                                    <form id="frmDenominationParamters">
                                        <partial name="_DenominationParameter.cshtml" model="new DenominationParameterViewModel()" />
                                    </form>
                                </div>
                                <div class="modal-footer">
                                    <input type="button" id="SaveDenominationParamter" value="Save" class="btn btn-success float-right" onclick="AddDenominationParamter($('#denomintionParamterId').val())" />
                                    <button type="button" class="btn btn-secondary float-left" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="modelParameter" class="modal fade" role="dialog" dir="ltr" tabindex="-1">
                        <div class="modal-dialog modal-xl">
                            <!-- Modal content-->
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h2>Add Denomination Params</h2>
                                </div>
                                <div class="modal-body">
                                    <form id="frmDenominationParams">
                                        <div class="card">
                                            <div class="card-body">
                                                @*<input type="hidden" asp-for="Id" />*@
                                                <div class="form-group">
                                                    <label class="control-label">Label</label>
                                                    <input class="form-control enableAddDenomintionParam" id="Label" />
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label">Title</label>
                                                    <input class="form-control enableAddDenomintionParam" id="Title" />
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label">Params Key</label>
                                                    <input class="form-control enableAddDenomintionParam" id="ParamsKey" />
                                                </div>
                                                <div class="form-group row">
                                                    <div class="col-md-6">
                                                        <label class="control-label">Value Type</label>
                                                        <select id="ValueTypeId" asp-items="@Html.GetEnumSelectList<DenominationParamsValueType>()" class="form-control enableAddDenomintionParam" data-style="select-with-transition" title="Choose a Type" data-size="7">
                                                            <option disabled selected> Choose a Type</option>
                                                        </select>
                                                    </div>
                                                    <div class="col-md-6">
                                                        <label class="control-label">Value Mode</label>
                                                        <select id="ValueModeId" asp-items="@Html.GetEnumSelectList<DenominationParamsValueMode>()" class="form-control enableAddDenomintionParam" data-style="select-with-transition" title="Choose a Mode" data-size="7">
                                                            <option disabled selected> Choose a Mode</option>
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer">
                                    <input type="button" id="SaveDenominationParamter" value="Save" class="btn btn-success float-right" onclick="AddDenominationParams()" data-toggle="modal" data-target="myDenominationParameter" data-dismiss="modal" />
                                    <button type="button" class="btn btn-secondary float-left" data-toggle="modal" data-target="myDenominationParameter" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="receiptData" role="tabpanel" aria-labelledby="receiptData-tab">
                    <div class="card">
                        <partial name="_DenominationReceipt" model="@Model.DenominationReceipt" />
                        <div class="card-footer mt-2">
                            <input type="button" id="saveDenominationRecepit" onclick="saveDenominationRecepit()" value="Save" class="btn btn-success btnSubmit float-right" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts{

    <script>
        var rowIdx = 0;
        var arrayJson = [];

        $(document).ready(function () {
            $('.js-example-basic-single').select2({
                width: '800px',
                theme: "classic",
            });
        });

        $("input.enableBtn").keyup(function () {
            var empty = false;

            $("input.enableBtn").each(function () {
                if ($(this).val() == '') {
                    empty = true;
                }
            });

            if (empty)
                $('#SaveServiceConfig').attr('disabled', 'disabled');
             else
                $('#SaveServiceConfig').removeAttr('disabled');
        });

        $("input.enableAddValueList").keyup(function () {
            var empty = false;

            $("input.enableAddValueList").each(function () {
                if ($(this).val() == '') {
                    empty = true;
                }
            });

            if (empty)
                $('#addValueToList').attr('disabled', 'disabled');
            else
                $('#addValueToList').removeAttr('disabled');
        });

        //$("input.enableBtndenomnationParamter").keyup(function () {
        //    var empty = false;

        //    $("input.enableBtndenomnationParamter").each(function () {
        //        if ($(this).val() == '') {
        //            empty = true;
        //        }
        //    });

        //    if (empty || $('#DenominationParamID').val() == null)
        //        $('#SaveDenominationParamter').attr('disabled', 'disabled');
        //    else
        //        $('#SaveDenominationParamter').removeAttr('disabled');
        //});

        $("input.enableAddParam").keyup(function () {
            var empty = false;
            $("input.enableAddParam").each(function () {
                if ($(this).val() == '') {
                    empty = true;
                }

            });

            if (empty)
                $('#addConfigParams').attr('disabled', 'disabled');
            else
                $('#addConfigParams').removeAttr('disabled');
        });

        //$("input.enableBtnSaveDenominationServiceProvider").keyup(function () {
        //    var empty = false;

        //    $("input.enableBtnSaveDenominationServiceProvider").each(function () {
        //        if ($(this).val() == '') {
        //            empty = true;
        //        }
        //    });

        //    if (empty || $('#ServiceProviderID').val() == null)
        //        $('#SaveDenominationServiceProvider').attr('disabled', 'disabled');
        //    else
        //        $('#SaveDenominationServiceProvider').removeAttr('disabled');
        //});

        function toggleButton(ref, bttnID) {
                document.getElementById(bttnID).disabled = ((ref.value !== ref.defaultValue) ? false : true);
        }

        function showSweetAlert() {
            swal({
                title: "Are you sure?",
                text: "Once Saved, you will be Redirect to another page!",
                icon: "info",
                buttons: true,
                dangerMode: true,
            }).then((willDelete) => {
                    if (willDelete) {
                        swal("Save Succcefully", {
                            icon: "success",
                        });
                        jQuery("#frmDenomination").submit();
                    } else {
                        swal("Your imaginary file is safe!");
                    }
                });
        }

        function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode;
            if (charCode != 46 && charCode > 31
                && (charCode < 48 || charCode > 57))
                return false;

            return true;
        }

        function toggleButton(ref, bttnID) {
            document.getElementById(bttnID).disabled = ((ref.value !== ref.defaultValue) ? false : true);
        }

        function AddDenominationServiceProvider(IsEdited) {
            
            var id = $('#denominationServieProviderId').val();
            var DenominationID = @ViewContext.RouteData.Values["id"];
            var ServiceProviderID = $('#ServiceProviderID').val();
            var ServiceConfigerationID = $('#ServiceConfigerationID').val();
            var Balance = $('#Balance').val();
/*            var Status = $('#Status').val();*/
            var ProviderCode = $('#ProviderCode').val();
            var ProviderAmount = $('#ProviderAmount').val();
            var OldServiceID = $('#OldServiceID').val();
            var ProviderHasFees = $('#ProviderHasFees').is(':checked');

            var urlDenomnitonServiceProvider = IsEdited != "" ? "@Url.Action("EditDenominationServiceProvider")" : "@Url.Action("AddDenominationServiceProvider")";
            if (CheckValidation("frmDenominationServiceProviders"))
            {
                $.ajax({
                    type: "POST",
                    url: urlDenomnitonServiceProvider,
                    data: {
                        Id: id,
                        DenominationID ,
                        ServiceProviderID ,
                        ServiceConfigerationID,
                        Balance ,
                        ProviderCode ,
                        ProviderAmount ,
                        OldServiceID ,
                        ProviderHasFees
                    },
                     dataType: "text",
                    success: function (msg) {
                        

                        var dataTest = JSON.parse(msg);

                        var html = `<td>${dataTest.id}</td><td> ${dataTest.serviceProviderName}</td>
                        <td> ${dataTest.balance} </td><td>${dataTest.providerCode}</td>
                        <td>${dataTest.providerAmount}</td><td>${dataTest.providerHasFees}</td>
                        <td><button onclick="EditDenominationServiceProvider(${dataTest.id},this)" class="btn btn-primary mr-1">Edit</button>
                        <button onclick="ChangeStatusDenominationServiceProvider(${dataTest.id},this)" class="${dataTest.status ? 'btn btn-danger' : 'btn btn-success'}">${dataTest.status ? 'Deactive' : 'Active'}</button></td>`;

                        if (IsEdited == "")
                            $('#table-DenominationServiceProvider').append(`<tr id="tr-dsp-' + dataTest.id+'">${html}</tr>`);
                            else {
                            var row = '#tr-dsp-' + dataTest.id;
                            $(row).empty();
                            $(row).append(html);
/*                            $(row).append('<td>' + data.id + '</td><td>' + data.serviceProviderName + '</td><td>' + data.balance + '</td><td>' + data.providerCode + '</td><td>' + data.providerAmount + '</td><td>' + data.providerHasFees + '</td><td><button onclick="EditDenominationServiceProvider(' + data.id + ',this)" class="btn btn-primary mr-1">Edit</button><a onclick="ChangeStatusDenominationServiceProvider(' + data.id + ',this)" class="btn btn-success">Change</a></td>');*/
                        }

                        ClearData();
                        $('#myDenominationServiceProviderModal').modal('hide');
                    },
                     error: function (req, status, error) {
                         swal("There is some error happened!", {
                             icon: "error",
                         });
                    }
                });
            }
            else {
                swal("You should compelete fields!", {
                    icon: "info",
                });
            }

        }

        function CreateServiceConfiguaration() {

            var url = $("#txtUrl").val();
            var timeOut = $("#txtTimeOut").val();
            var username = $("#txtUsername").val();
            var password = $("#txtPassword").val();

            var dataParams = getParams("#tblParams tbody tr");

             $.ajax({
                type: "POST",
                 url: "@Url.Action("CreateServiceConfiguartion")",
                 data: {
                     URL: url,
                     TimeOut: timeOut,
                     UserName: username,
                     UserPassword: password,
                     ServiceConfigParms: dataParams
                 },
                dataType: "json",
                 success: function (state) {

                     /*                     console.log('success data response ' + state);*/
                     swal("Check! Your record has been Added into Field!", {
                         icon: "success",
                     });
                         $('#drpServiceConfig').append('<option value="' + state.id + '" selected>' +
                             state.url + '</option>');
                },
                 error: function (req, status, error) {

                }
            });
        }

        function AddSerilaizeJsonValueList() {

            $('#addValueToList').attr('disabled', 'disabled');
            $('#clearValueToList').removeAttr('disabled');

            var keytxt = $('#txtKeyValueList').val();
            var valuetxt = $('#txtvalueValueList').val();

            var object = { key: keytxt, value: valuetxt };

            var json = JSON.stringify(object);

            arrayJson.push(json);

            const str = arrayJson.toString();

            $('#txtValueList').empty();
            $('#txtValueList').val('[' + str + ']');

            $('#txtKeyValueList').val('');
            $('#txtvalueValueList').val('');

        }

        function ClearValueList() {
            arrayJson = [];
            $('#txtKeyValueList').val('');
            $('#txtvalueValueList').val('');
            $('#txtValueList').val('');
            $('#addValueToList').attr('disabled', 'disabled');
            $('#clearValueToList').attr('disabled', 'disabled');
        }

        function AddDenominationParamter(IsEdited) {

             var Id = $('#denomintionParamterId').val();
             var DenominationID = @ViewContext.RouteData.Values["id"];
             var Sequence = $('#Sequence').val();
             var Value = $('#Value').val();
             var ValueList = $('#txtValueList').val();
             var ValidationExpression = $('#ValidationExpression').val();
             var ValidationMessage = $('#ValidationMessage').val();
             var DenominationParamID = $('#DenominationParamID').val();
            var Optional = $('#Optional').is(':checked');

             var urlDenomnitonParamter = IsEdited != "" ? "@Url.Action("EditDenominationParameter")" : "@Url.Action("AddDenominationParameter")";

            if (CheckValidation("frmDenominationParamters"))
            {
                $.ajax({
                    type: "POST",
                    url: urlDenomnitonParamter,
                    data: {
                        Id,
                        DenominationID  ,
                        Sequence ,
                        Value,
                        ValueList ,
                        ValidationExpression ,
                        ValidationMessage ,
                        DenominationParamID ,
                        Optional
                    },
                     dataType: "text",
                    success: function (msg) {

                        var data = JSON.parse(msg);

                        if (IsEdited == "")
                            $('#table-DenomnationParamter').append('<tr id="tr-dp-'+data.id+'"><td>' + data.id + '</td><td>' + data.sequence + '</td><td>' + data.value + '</td><td>' + data.validationExpression + '</td><td>' + data.validationMessage + '</td><td>' + data.optional + '</td><td> <button onclick="viewDataDenomiationParamterModal(' + data.id + ',this)" class="btn btn-primary mr-1">Edit</button> <button onclick="ConfirmDeleteDenominationParameter('+data.id+','+data.denominationId+',this)" class="btn btn-danger">Delete</button></td></tr>');
                        else {
                            var row = '#tr-dp-' + data.id;
                            $(row).empty();
                            $(row).append('<td>' + data.id + '</td><td>' + data.sequence + '</td><td>' + data.value + '</td><td>' + data.validationExpression + '</td><td>' + data.validationMessage + '</td><td>' + data.optional + '</td><td> <button onclick="viewDataDenomiationParamterModal(' + data.id + ',this)" class="btn btn-primary mr-1">Edit</button> <button onclick="ConfirmDeleteDenominationParameter('+data.id+','+data.denominationId+',this)" class="btn btn-danger">Delete</button></td>');
                        }

                        ClearData();
                        $('#myDenominationParameter').modal('hide');
                    },
                     error: function (req, status, error) {
                         
                         swal("Ops! There is some error happened!", {
                             icon: "error",
                         });
                    }
                });
            }
            else {
                swal("You should Complete Fields", {
                    icon: "info",
                });
            }
        }

        function saveDenominationRecepit() {

            var DenominationID = @ViewContext.RouteData.Values["id"];
            var id = $('#RecepitId').val();
            var title = $('#title').val();
            var disclaimer = $('#disclaimer').val();
            var footer = $('#footer').val();
            var paramterId = $('#paramterId').val();
            var alignment = $('#alignment').val();
            var bold = $('#bold').val();

            $.ajax({
                type: "POST",
                url: "@Url.Action("EditDenominationRecepit")",
                data: {
                    DenominationReceiptData: {
                        id: id,
                        DenominationID: DenominationID,
                        Title: title,
                        Disclaimer: disclaimer,
                        Footer: footer
                    },
                    DenominationReceiptParams: [{
                        ParameterID: paramterId,
                        Alignment: alignment,
                        Bold: bold
                    }]
                },
                 dataType: "text",
                success: function (msg) {
                    swal({
                        title: "Good job!",
                        text: "You Change Successfully!",
                        icon: "success",
                        button: "OK",
                    });
                },
                 error: function (req, status, error) {
                     
                     swal("Ops! There is some error happened!", {
                         icon: "error",
                     });
                }
            });
        }

        function viewDataDenomiationParamterModal(id,row)
        {
             $.ajax({
                type: "GET",
                url: "@Url.Action("EditDenominationParameter")",
                data: {id:id},
                 dataType: "text",
                success: function (msg) {

                    var data = JSON.parse(msg);

                    $('#denomintionParamterId').val(id);
                    $('#Sequence').val(data.sequence);
                    $('#Value').val(data.value);
                    $('#txtValueList').val(data.valueList);
                    $('#ValidationExpression').val(data.validationExpression);
                    $('#ValidationMessage').val(data.validationMessage);
                    $('#DenominationParamID').val(data.denominationParamID);
                    $('#Optional').prop('checked', data.optional);

                    $('#myDenominationParameter').modal('toggle');
                },
                 error: function (req, status, error) {
                     
                }
            });
        }

        function ClearData() {

           /*  Denomiantion Parameter*/
             $('#denomintionParamterId').val('');
             $('#Sequence').val('');
             $('#Value').val('');
             $('#txtValueList').val('');
             $('#ValidationExpression').val('');
             $('#ValidationMessage').val('');
             $('#DenominationParamID').val('');
             $('#Optional').val('');

            /*  Denomiantion Service Provider   */
            $('#denominationServieProviderId').val('');
            $('#ServiceProviderID').val('');
            $('#ServiceConfigerationID').val('');
            $('#Balance').val('');
            $('#Status').val('');
            $('#ProviderCode').val('');
            $('#ProviderAmount').val('');
            $('#OldServiceID').val('');
        }

        function ConfirmDeleteDenominationParameter(id, denominationId,row)
        {

            swal({
                title: "Are you sure?",
                text: "Once deleted, you will not be able to recover this record!",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            }).then((willDelete) => {
                if (willDelete) {
                    DeleteDenominationParameter(id, denominationId,row);
                    }
                });
        }

        function DeleteDenominationParameter(id, denominationId,row) {

            $.ajax({
                type: "GET",
                url: "@Url.Action("DeleteDenominationParameter")",
                  data: {
                      id: id,
                      denominationId: denominationId
                  },
                 dataType: "text",
                success: function (msg) {
                    swal("Poof! Your record has been deleted!", {
                        icon: "success",
                    });

                    $(row).parents("tr").remove();
/*                    var data = JSON.parse(msg);*/

                },
                 error: function (req, status, error) {
                     
                     swal("Ops! There is some error happened!", {
                         icon: "error",
                     });
                }
            });
        }

        function EditDenominationServiceProvider(id,row)
        {
             $.ajax({
                type: "GET",
                url: "@Url.Action("EditDenominationServiceProvider")",
                data: {id:id},
                 dataType: "text",
                 success: function (msg) {
                     
                    var data = JSON.parse(msg);

                    $('#denominationServieProviderId').val(id);
                    $('#ServiceProviderID').val(data.serviceProviderID);
                    $('#ServiceConfigerationID').val(data.serviceConfigerationID);
                    $('#Balance').val(data.balance);
                    $('#Status').val(data.status);
                    $('#ProviderCode').val(data.providerCode);
                    $('#ProviderAmount').val(data.providerAmount);
                    $('#OldServiceID').val(data.oldServiceID);
                    $('#ProviderHasFees').prop('checked', data.providerHasFees);

                    $('#myDenominationServiceProviderModal').modal('toggle');
                },
                 error: function (req, status, error) {
                     
                }
            });
            }

        function ChangeStatusDenominationServiceProvider(id,row) {
             $.ajax({
                type: "GET",
                url: "@Url.Action("ChangeStatusDenominationServiceProvider")",
                  data: {
                      id: id,
                  },
                 dataType: "text",
                 success: function (msg) {

                    swal("Poof! Your record has been Changed!", {
                        icon: "success",
                    });

                     var rowCurrent = $(row).attr('class');
                     var active = rowCurrent.includes("danger");

                     $(row).removeClass(rowCurrent);
                     $(row).addClass(active == false ? 'btn btn-danger' : 'btn btn-success');
                     $(row).html(active == false ? 'Deactive' : 'Active');
                },
                 error: function (req, status, error) {
                     
                     swal("Ops! There is some error happened!", {
                         icon: "error",
                     });
                }
            });
        }

        function CheckValidation(formId)
        {
            
            var valid = true;

            switch (formId) {
                case "frmDenominationParamters":
                    $("input.enableBtndenomnationParamter").each(function () {
                        if ($(this).val() == '' || $('#DenominationParamID').val() == null)
                            valid = false;
                    });
                    break;
                case "frmDenominationServiceProviders":
                    $("input.enableBtnSaveDenominationServiceProvider").each(function () {
                        if ($(this).val() == '' || $('#ServiceProviderID').val() == null || $('#ServiceConfigerationID').val() == null)
                            valid = false;
                    });
                    break;
                default:
                    valid = false;
            }

            return valid;
        }

    </script>
}

@model AccountChannelModelViewModel
@using AdminDashboard.Models.SwaggerModels

@{
    ViewData["Title"] = "Index";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h2>Account Channels</h2>
                    <button type="button" class="pull-right btn btn-outline-primary" data-toggle="modal" data-target="#myModal">Create</button>
                    
                </div>
                <div class="card-body">
                    <input type="hidden" id="MyId" />
                    <table id="table-channels" class="table table-striped">
                        <thead>
                            <tr>
                                <th>Channel Name</th>
                                <th>Serial</th>
                                <th>Value</th>
                                <th>Status</th>
                                <th>Created By</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var channel in Model.AccountChannels)
                            {
                            <tr>
                                <td>@channel.ChannelName</td>
                                <td>@channel.Serial</td>
                                <td>@channel.Value</td>
                                <td>@channel.Status</td>
                                <td>@channel.CreatedName</td>
                                <td>
                                    <button type="button" class="pull-right btn btn-info" data-toggle="modal" data-target="#myChangeModal" onclick="getData(@channel.Id,@((int)channel.Status))">Change Status</button>


                                    @*<a asp-action="DeleteAccountChannel" asp-route-id="@channel.Id" class="btn btn-info">Edit</a>*@
                                    @*<a asp-action="ChangeAccountChannel" asp-route-id="@channel.Id" class="btn @(channel.Status ? "btn-danger": "btn-success")">
                @(channel.Status ? "Deactive" : "Active")
            </a>*@
                                    @*@{var exceptedLst = new SelectListItem()
                {
                    Text = channel.Status.ToString(),
                    Value = ((int)channel.Status).ToString()
                };
            }*@
                                    <!--<select id="drpStatus" asp-items="Html.GetEnumSelectList<AccountChannelStatus>().Where(t=>!((int)channel.Status).ToString().Contains(t.Value))" class="form-control" data-style="select-with-transition" title="Choose an AccountType" data-size="7"
        onchange="document.location.href = '../ChangeAccountChannel?id=' +'&status='+this.options[this.selectedIndex].value;">-->
                                    @*onchange="changeStatus('@channel.Id')">*@
                                    <!--<option>Choose an AccountType</option>
        </select>-->

                                </td>
                            </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" id="rowId" />
    <input type="hidden" id="statusValue" />
</div>
<partial name="_ChangeAccountChannel.cshtml" />
<partial name="_CreateAccountChannel.cshtml" />
<partial name="_ChangeChannel.cshtml" model="Model.CreateChannelAccount" />
@{
    var enumLst = (Html.GetEnumSelectList<AccountChannelStatus>().ToArray());
}

@section Scripts{
    <script>

        $(function () {

            $("#txtReason").keyup(function () {
                //Reference the Button.
                var btnSubmit = $("#btnSubmit");
                //Verify the TextBox value.
                if ($(this).val().trim() != "" && $("#drpStatus").val() != null) {
                    //Enable the TextBox when TextBox has value.
                    btnSubmit.removeAttr("disabled");
                } else {
                    //Disable the TextBox when TextBox is empty.
                    btnSubmit.attr("disabled", "disabled");
                }
            });
        });

        $('#btnSearch').on("click", function () {

            var searchKey = $("#txtSearchKey").val();
            var accountId = document.URL.substring(document.URL.lastIndexOf('/') + 1);
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetChannels")",
                data: { serial: searchKey },
                dataType: "text",
                success: function (msg) {

                    var x = $('#tblChannels tbody').empty();
                    $.each(JSON.parse(msg), function (i, data) {
                        $('#tblChannels').append('<tr><td>' + data.serial + '</td><td>' + data.channelTypeName + '</td><td>' + data.channelOwnerName + '</td><td>' + data.paymentMethodName + '</td><td> <a href="@Url.Action("CreateAccountChannel", "Accounts")?accountId=' + accountId + '&channelId=' + data.id + '" class="btn btn-info">Transfer</a></td></tr>');
                    });
                },
                error: function (req, status, error) {
                }
            });
        });

        function changeStatus() {
            var ddlFruits = $("[id*=drpStatus]");
            var selectedValue = ddlFruits.val();

            var rowId = $('#rowId').val();
            var txtReason = $('#txtReason').val();

            $.ajax({
                type: "GET",
                url: "@Url.Action("ChangeAccountChannel")",
                data: {
                    id: rowId,
                    status: selectedValue,
                    reason: txtReason
                },
                dataType: "text",
                success: function (msg) {
                    $("#myChangeModal").modal('hide');
                    location.reload(true);
                },
                error: function (req, status, error) {
                }
         });
        }

        function getData(val, statusValue) {
            $('#rowId').val(val);
            $('#statusValue').val(statusValue);
          
            var model = '@Html.Raw(Json.Serialize(enumLst))';
            var lst = JSON.parse(model);

            $('#drpStatus').empty();
            $('#txtReason').val('');
            $('#drpStatus').append('<option disabled selected>Choose an AccountType</option>');
            for (i = 0; i < lst.length; i++) {

                if (lst[i].value != @((int)AccountChannelStatus.Created) && lst[i].value != statusValue) {

                    var data = '<option value=' + lst[i].value + '>' + lst[i].text + '</option>';
                    $('#drpStatus').append(data);

                }
            }

            //        $("#drpStatus option[value='2']").remove();
            //console.log(lst);
            //    $("#drpStatus option[value='" + statusValue + "']").each(function () {

            //        $(this).remove();
            //    });
        }

        function toggleButton(ref, bttnID) {
            document.getElementById(bttnID).disabled = ((ref.value !== ref.defaultValue) ? false : true);
        }

        $('#btnCreate').click(function () {
            $("#myModal").modal('hide');
        });

        //save account chanel
        function saveAccountChannle() {
            let accountId = $('#AccountId').val();
            let serial = $('#serial').val();
            let channelName = $('#channelName').val();
            let channelValue = $('#channelValue').val();
            let channelType = $('#drpChannelType').val();
            let channelOwner = $('#drpChannelOwner').val();
            let paymentMethod = $('#drpPaymentMethod').val();

            $.ajax({
                 url: '@Url.Action("CreateChannelJson", "Channels")',
                 type: 'POST',
                 data: {
                     AccountId: accountId,
                     Name: channelName,
                     Serial: serial,
                     Value: channelValue,
                     ChannelTypeID: channelType,
                     ChannelOwnerID: channelOwner,
                     PaymentMethodID: paymentMethod
                 },
                success: function (data) {
                    swal({
                        title: "",
                        text: "تم الحفظ",
                        icon: "success",
                        button: "حسناً",
                    }).then(() => {
                        $("#channelModal").modal('hide');
                        location.reload(true);
                        //$("#myModal").modal('hide');
                    });;
                },
                error: function (req, status, error) {

                    
                }
            });

            $('#channelModal').on('shown.bs.modal', function () {
                $('#btnSubmit').trigger('focus')
            })
        }
    </script>
}

/* 
 * API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = AdminDashboard.SwaggerClientHelpers.SwaggerDateConverter;

namespace AdminDashboard.Models.SwaggerModels
{
    /// <summary>
    /// ServiceConfigerationModel
    /// </summary>
    [DataContract]
        public partial class ServiceConfigerationModel :  IEquatable<ServiceConfigerationModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceConfigerationModel" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="url">url.</param>
        /// <param name="timeOut">timeOut.</param>
        /// <param name="userName">userName.</param>
        /// <param name="userPassword">userPassword.</param>
        /// <param name="serviceConfigParmsModel">serviceConfigParmsModel.</param>
        public ServiceConfigerationModel(int? id = default(int?), string url = default(string), int? timeOut = default(int?), string userName = default(string), string userPassword = default(string), List<ServiceConfigParmsModel> serviceConfigParmsModel = default(List<ServiceConfigParmsModel>))
        {
            this.Id = id;
            this.Url = url;
            this.TimeOut = timeOut;
            this.UserName = userName;
            this.UserPassword = userPassword;
            this.ServiceConfigParmsModel = serviceConfigParmsModel;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name="url", EmitDefaultValue=false)]
        public string Url { get; set; }

        /// <summary>
        /// Gets or Sets TimeOut
        /// </summary>
        [DataMember(Name="timeOut", EmitDefaultValue=false)]
        public int? TimeOut { get; set; }

        /// <summary>
        /// Gets or Sets UserName
        /// </summary>
        [DataMember(Name="userName", EmitDefaultValue=false)]
        public string UserName { get; set; }

        /// <summary>
        /// Gets or Sets UserPassword
        /// </summary>
        [DataMember(Name="userPassword", EmitDefaultValue=false)]
        public string UserPassword { get; set; }

        /// <summary>
        /// Gets or Sets ServiceConfigParmsModel
        /// </summary>
        [DataMember(Name="serviceConfigParmsModel", EmitDefaultValue=false)]
        public List<ServiceConfigParmsModel> ServiceConfigParmsModel { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ServiceConfigerationModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  TimeOut: ").Append(TimeOut).Append("\n");
            sb.Append("  UserName: ").Append(UserName).Append("\n");
            sb.Append("  UserPassword: ").Append(UserPassword).Append("\n");
            sb.Append("  ServiceConfigParmsModel: ").Append(ServiceConfigParmsModel).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ServiceConfigerationModel);
        }

        /// <summary>
        /// Returns true if ServiceConfigerationModel instances are equal
        /// </summary>
        /// <param name="input">Instance of ServiceConfigerationModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ServiceConfigerationModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Url == input.Url ||
                    (this.Url != null &&
                    this.Url.Equals(input.Url))
                ) && 
                (
                    this.TimeOut == input.TimeOut ||
                    (this.TimeOut != null &&
                    this.TimeOut.Equals(input.TimeOut))
                ) && 
                (
                    this.UserName == input.UserName ||
                    (this.UserName != null &&
                    this.UserName.Equals(input.UserName))
                ) && 
                (
                    this.UserPassword == input.UserPassword ||
                    (this.UserPassword != null &&
                    this.UserPassword.Equals(input.UserPassword))
                ) && 
                (
                    this.ServiceConfigParmsModel == input.ServiceConfigParmsModel ||
                    this.ServiceConfigParmsModel != null &&
                    input.ServiceConfigParmsModel != null &&
                    this.ServiceConfigParmsModel.SequenceEqual(input.ServiceConfigParmsModel)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Url != null)
                    hashCode = hashCode * 59 + this.Url.GetHashCode();
                if (this.TimeOut != null)
                    hashCode = hashCode * 59 + this.TimeOut.GetHashCode();
                if (this.UserName != null)
                    hashCode = hashCode * 59 + this.UserName.GetHashCode();
                if (this.UserPassword != null)
                    hashCode = hashCode * 59 + this.UserPassword.GetHashCode();
                if (this.ServiceConfigParmsModel != null)
                    hashCode = hashCode * 59 + this.ServiceConfigParmsModel.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
